name: CI / Testar e Empacotar
on:
  workflow_dispatch:
    inputs:
      buildBackend:
        description: 'Buildar backend?'
        type: boolean
        required: true
        default: true
      buildFrontend:
        description: 'Buildar frontend?'
        type: boolean
        required: true
        default: true
      buildDocs:
        description: 'Buildar documentação?'
        type: boolean
        required: true
        default: true
      version_type:
        description: "Como incrementar versão?"
        required: true
        type: choice
        options:
          -
          - patch
          - minor
          - replace_last
jobs:
#  run_tests:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v1
#        with:
#          fetch-depth: 1
#      # Dispara testes no backend
#      - name: Run tests backend
#        shell: bash
#        working-directory: ./backend/bin/
#        run: ./local-run-test.sh --nowatch
#      # Dispara testes no frontend_web
#      - name: Run tests frontend_web
#        shell: bash
#        working-directory: ./frontend_web/bin/
#        run: ./local-run-test.sh --nowatch

  upgrade_version:
    runs-on: ubuntu-latest
#    needs: [run_tests]
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      #Altera versão backend
      - name: "Add version backend"
        if: ${{ github.event.inputs.version_type != 'replace_last' }}
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: "backend"
        with:
          version-type: ${{ github.event.inputs.version_type }}
          skip-tag: "true"
      #Altera versão frontend
      - name: "Add version frontend_web"
        if: ${{ github.event.inputs.version_type != 'replace_last' }}
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: "frontend_web"
        with:
          version-type: ${{ github.event.inputs.version_type }}
          skip-tag: "true"
      #Altera versão docs
      - name: "Add version docs"
        if: ${{ github.event.inputs.version_type != 'replace_last' }}
        uses: "phips28/gh-action-bump-version@master"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: "docs"
        with:
          version-type: ${{ github.event.inputs.version_type }}
          skip-tag: "true"
      #Aguarda uns segundos
      - name: Aguardar 3 segundos
        run: sleep 3s
        shell: bash
      #Compartilha a versão com a pipe
      - name: Save TAG Parameter
        shell: bash
        id: tag_name
        run: echo "::set-output name=TAG::$(cat backend/package.json | jq -r .version)"
      - name: Imprime a tag
        run: echo ${{ steps.tag_name.outputs.TAG }}
    outputs:
      tag: ${{ steps.tag_name.outputs.TAG }}
  
  run_build_backend:
    runs-on: ubuntu-latest
    needs: [upgrade_version]
    if: ${{ github.event.inputs.buildBackend == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      # Trocar versão node
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18.12
      # Builda Frontend
      - name: Build Frontend
        shell: bash
        run: ./bin/local-build-backend.sh
      # Compacta Docs
      - name: Compact Build Frontend
        shell: bash
        run: zip -r backend backend/dist backend/package.json backend/yarn.lock backend/tsconfig.json
      # Gera o release
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.upgrade_version.outputs.tag }}"
          files: backend.zip
  
  run_build_frontend:
    runs-on: ubuntu-latest
    needs: [upgrade_version]
    if: ${{ github.event.inputs.buildFrontend == 'true' }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      # Trocar versão node
      - name: Use Node.js 
        uses: actions/setup-node@v3
        with:
          node-version: 18.12
      # Trocar versão node
      - name: Copy default Build
        shell: bash
        run: cp ./frontend_web/src/.env.default.js ./frontend_web/src/.env.js
      # Builda Frontend
      - name: Build Frontend
        shell: bash
        run: ./bin/local-build-frontend.sh
      # Compacta Docs
      - name: Compact Build Frontend
        shell: bash
        run: zip -r frontend_web frontend_web/build 
      # Gera o release
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ needs.upgrade_version.outputs.tag }}"
          files: frontend_web.zip

#  run_build_docs:
#    runs-on: ubuntu-latest
#    needs: [upgrade_version]
#    if: ${{ github.event.inputs.buildDocs == 'true' }}
#    steps:
#      - uses: actions/checkout@v2
#        with:
#          fetch-depth: 1
#      # Trocar versão node
#      - name: Use Node.js 
#        uses: actions/setup-node@v3
#        with:
#          node-version: 14.17
#      # Builda Docs
#      - name: Build Docs
#        shell: bash
#        run: ./bin/local-build-docs.sh
#      # Compacta Docs
#      - name: Compact Build Docs
#        shell: bash
#        run: zip -r docs docs/public docs/package.json docs/static docs/yarn.lock docs/gatsby-config.js docs/Dockerfile
#      # Gera o release
#      - name: Release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: "v${{ needs.upgrade_version.outputs.tag }}"
#          files: docs.zip
